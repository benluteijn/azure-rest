{"version":3,"sources":["webpack:///1ecd4cf6fb75c75d4aed.js","webpack:///./docs.azureselector.js","webpack:///./docs.branchselector.js","webpack:///./commenting.js","webpack:///./commenting-callback.js","webpack:///./insight.js","webpack:///./rating.js","webpack:///./survey.js"],"names":["webpackJsonp",32,"module","exports","__webpack_require__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","$","URI","mainframe","generateOptionsMap","selectorDivElement","isSingleSelector","optionsMap","getAzureSelectorAnchors","each","this","text","contents","trim","slice","split","length","firstOption","secondOption","targetLink","attr","getCurrentSelectedOptions","browserUrlString","window","location","href","toLowerCase","mainOptionValue","secondaryOptionValue","targetUrlString","equals","createDropdowns","dropdownItemTemplate","key","jumpToUrl","targetUrl","selectedOptions","container","createAzureSelectorsContainer","firstDropdown","createAzureSelectorDropdown","secondDropdown","populateDropdownOptions","val","change","replaceWith","renderAzureSelectors","getSingleAzureSelectors","getDoubleAzureSelectors","apply","undefined","call",33,"cookies","utilities","isInTestEnvironment","authenticationInfo","getCookie","authenticationFields","i","authKeyValuePair","getAvailableBranchesAsync","windowUrl","baseUrlString","origin","apiUrlString","encodeURIComponent","pathname","apiUrl","loadJsonFileAsync","toString","err","when","renderBranchSelectorAsync","done","branches","sort","dropdown","createBranchSelectorDropdown","targetBranchName","setCookie","search","appendToSocialActions",34,"__WEBPACK_AMD_REQUIRE_ARRAY__","config","callbacks","trace","util","locale","uiLocale","getLanguageFromUrl","loadLibrary","paths","livefyre","opencomment","then","networkName","siteId","hostname","commentOptions","serviceProvider","network","containerElementId","documentIdMetaName","sidenoteSelectors","include","exclude","localeMetaName","theme","commentCallback","data","statusCode","reject","valueObject","resolve","sidenoteCallback","identityServiceCallback","traceError","message",35,"deferreds","comment-init","Deferred","sidenote-init","attach","type","handler","errorHandler","defer","promise","getPromise",36,"Trace","TraceCategory","insight","debugConsoleLogEnabled","debugLogMsgs","debugLog","inMsg","push","console","log","getMetaTagContent","inMTName","myMTContent","content","e","setMetaTagContent","inMTContent","myMetaTag","document","createElement","name","getElementsByTagName","appendChild","processWEDCSCustomEventFromArray","inArray","MscomCustomEvent","formatErrorObjectToWedcsArray","errorObject","array","error","isBubbled","JSON","stringify","substring","source","lineno","colno","errorSubscriber","tArray","ex","subscribeErrors","Errors","subscribe","traceSubscriber","entry","navigationStart","performance","timing","category","perfEvent","customPerfArrary","timeStamp","getTime","join","subscribeTrace","commentSubscriber","widget","on","id","encodeURI","Date","commentErrorHandler","reason","sidenoteSubscriber","replace","sidenoteErrorHandler","setupLiveFyreTracking","commenting","commentPromise","sidenotePromise","firePageFocusEvent","setupPageFocusTracking","prevType","fireCopyEvent","txt","setupCopyTracking","bind","getSelection","fireSwitcherEvent","switcher","selectedValue","setupSwitcherTracking","scrollArea","inName","scrollNA","scrollQuarter","scrollHalf","scrollThreeQuarter","scrollBot","currScrollArea","scrollAreaList","setCurrScrollArea","inIndex","scrollBottomElement","scrollPageHeight","viewportBottom","refreshScrollPageDimVars","tBottom","getBoundingClientRect","top","pageYOffset","body","height","innerHeight","suppressMobileEvents","fireScrollEvent","inScrollValue","fireScrollStopEvent","eventType","processScroll","stopEvent","clearTimeout","scrollResizeTimer","innerWidth","tCurrPercent","Math","round","scrollTimer","setupScrollTracking","addEventListener","setTimeout","resize","extractMetaFromAmbientContext","AmbientContext","hasOwnProperty","String","append","getPerfTiming","keys","timeInfoArr","index","elapsed","biMapping","author","contentlang","depot_name","document_id","experiment_id","gitcommit","original_content_git_url","pagetype","site_name","updated_at","setupBiTags","currentLocale","strs","isGlobalMetadataEnabled","meta","listMSMetadata","res","arr","enableWEDCS","varClickTracking","varCustomerTracking","varAutoFirePV","route","ctrl","wedcs","ready","perfInfo","jQuery",37,"metadata","environment","openFeedbackOptions","siteNameMetaName","documentMetaName","get","propertyBag","ms.assetid",38,"t","c","n","o","s","a","SMCX","getElementById","async","src","protocol","parentNode","insertBefore"],"mappings":"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","file":"1ecd4cf6fb75c75d4aed.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 32:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function($) {/**\r\n\t * The Azure Selector component of the DOCS website.\r\n\t * Azure Selector is a component consists of one or two dropdowns displayed inline. When all of the dropdowns has a valid\r\n\t * value, the website will jump to the target page. If the user selects a value in one of the dropdown, the other dropdown\r\n\t * will also populate all the available values accordign the first selected one.\r\n\t *\r\n\t * Dependencies:\r\n\t *     - urijs: Find the current selected item by comparing the URLs\r\n\t *     - docs.mainframe: Construct/Manipulate Azure DOM elements\r\n\t */\r\n\t\r\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(8), __webpack_require__(23)], __WEBPACK_AMD_DEFINE_RESULT__ = function(URI, mainframe) {\r\n\t    \"use strict\";\r\n\t\r\n\t    // I will do a unified implementation of the Azure Selector for both one-dropdown and two-dropdowns.\r\n\t    // For the single azure selector, the input HTML would like to be:\r\n\t    // <div class=\"op_single_selector\">\r\n\t    //   <ul>\r\n\t    //     <li><a href=\"../a1.html\">A1</a></li>\r\n\t    //     <li><a href=\"../a2.html\">A2</a></li>\r\n\t    //     <li><a href=\"../a3.html\">A3</a></li>\r\n\t    //   </ul>\r\n\t    // </div>\r\n\t    //\r\n\t    // For the double azure selectors, the input HTML would look like:\r\n\t    // <div class=\"op_multi_selector\" title1=\"First Opt\" title2=\"Second Opt\">\r\n\t    //   <ul>\r\n\t    //     <li><a href=\"../c1.html\">(A1 | B1)</a></li>\r\n\t    //     <li><a href=\"../c2.html\">(A1 | B2)</a></li>\r\n\t    //     <li><a href=\"../c3.html\">(A2 | B1)</a></li>\r\n\t    //     <li><a href=\"../c4.html\">(A2 | B3)</a></li>\r\n\t    //     <li><a href=\"../c5.html\">(A3 | B1)</a></li>\r\n\t    //     <li><a href=\"../c6.html\">(A3 | B2)</a></li>\r\n\t    //     <li><a href=\"../c7.html\">(A3 | B3)</a></li>\r\n\t    //   </ul>\r\n\t    // </div>\r\n\t\r\n\t    /**\r\n\t     * First of all, we need to generate a Dictionary of the available options. For example, the mapping table of the single azure selector should be like:\r\n\t     * {\r\n\t     *     A1: { default: \"../a1.html\" },\r\n\t     *     A2: { default: \"../a2.html\" },\r\n\t     *     A3: { default: \"../a3.html\" }\r\n\t     * }\r\n\t     * But the mapping table for the double azure selectors would be a little bit compilicated:\r\n\t     * {\r\n\t     *     A1: {\r\n\t     *         B1: \"../c1.html\",\r\n\t     *         B2: \"../c2.html\"\r\n\t     *     }\r\n\t     *     A2: {\r\n\t     *         B1: \"../c3.html\",\r\n\t     *         B3: \"../c4.html\"\r\n\t     *     },\r\n\t     *     A3: {\r\n\t     *         B1: \"../c5.html\",\r\n\t     *         B2: \"../c6.html\",\r\n\t     *         B3: \"../c7.html\"\r\n\t     *     }\r\n\t     * }\r\n\t     */\r\n\t    function generateOptionsMap(selectorDivElement, isSingleSelector) {\r\n\t        var optionsMap = {};\r\n\t        mainframe.getAzureSelectorAnchors(selectorDivElement).each(function () {\r\n\t            if ($(this) && $(this).text()) {\r\n\t                var contents = (isSingleSelector ? [$(this).text(), \"default\"] : $(this).text().trim().slice(1, -1).split(\"|\"));\r\n\t                if (contents.length === 2) {\r\n\t                    var firstOption = contents[0].trim();\r\n\t                    var secondOption = contents[1].trim();\r\n\t                    var targetLink = $(this).attr(\"href\");\r\n\t                    if (firstOption && secondOption && targetLink) {\r\n\t                        if (!optionsMap[firstOption]) {\r\n\t                            optionsMap[firstOption] = {};\r\n\t                        }\r\n\t                        optionsMap[firstOption][secondOption] = targetLink;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        });\r\n\t        return optionsMap;\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * Get the current selected options from the optionsMap and return a two-element tuple. For the single selector, the second option is always \"default\".\r\n\t     */\r\n\t    function getCurrentSelectedOptions(optionsMap, isSingleSelector) {\r\n\t        var browserUrlString = window.location.href.toLowerCase();\r\n\t        for (var mainOptionValue in optionsMap) {\r\n\t            for (var secondaryOptionValue in optionsMap[mainOptionValue]) {\r\n\t                var targetUrlString = optionsMap[mainOptionValue][secondaryOptionValue].toLowerCase();\r\n\t                if (URI(targetUrlString, browserUrlString).equals(browserUrlString)) {\r\n\t                    return [mainOptionValue, secondaryOptionValue];\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return [null, null];\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * Next, one or two dropdowns are need to be created according to the generated optionsMap. The dropdowns are differentiate by main and secondary.\r\n\t     * The secondary dropdown's availble options will always be populated according to the main dropdown's current selection (If no item is selected, just\r\n\t     * make the secondary dropdown's availble options to empty).\r\n\t     */\r\n\t    function createDropdowns(selectorDivElement, isSingleSelector) {\r\n\t\r\n\t        function dropdownItemTemplate(key) { return [key, key]; }\r\n\t        function jumpToUrl(targetUrl) { window.location.href = targetUrl; }\r\n\t\r\n\t        var optionsMap = generateOptionsMap(selectorDivElement, isSingleSelector);\r\n\t        var selectedOptions = getCurrentSelectedOptions(optionsMap, isSingleSelector);\r\n\t\r\n\t        var container = mainframe.createAzureSelectorsContainer();\r\n\t        var firstDropdown = mainframe.createAzureSelectorDropdown(container, selectorDivElement.attr(\"title1\"));\r\n\t        var secondDropdown = null;\r\n\t        mainframe.populateDropdownOptions(firstDropdown, optionsMap, dropdownItemTemplate);\r\n\t        firstDropdown.val(selectedOptions[0]);\r\n\t        if (!isSingleSelector) {\r\n\t            secondDropdown = mainframe.createAzureSelectorDropdown(container, selectorDivElement.attr(\"title2\"));\r\n\t            firstDropdown.change(function () {\r\n\t                mainframe.populateDropdownOptions(secondDropdown, firstDropdown.val() ? optionsMap[firstDropdown.val()] : {}, dropdownItemTemplate);\r\n\t            });\r\n\t            secondDropdown.change(function () {\r\n\t                if (firstDropdown.val() && secondDropdown.val()) {\r\n\t                    jumpToUrl(optionsMap[firstDropdown.val()][secondDropdown.val()]);\r\n\t                }\r\n\t            });\r\n\t            firstDropdown.change();\r\n\t            secondDropdown.val(selectedOptions[1]);\r\n\t        } else {\r\n\t            firstDropdown.change(function () {\r\n\t                if (firstDropdown.val()) {\r\n\t                    jumpToUrl(optionsMap[firstDropdown.val()][\"default\"]);\r\n\t                }\r\n\t            });\r\n\t        }\r\n\t\r\n\t        selectorDivElement.replaceWith(container);\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * This function will convert both the Azure Single Selector as well as the Azure Double Selector HTMLs to the corresponding dropdown within the text.\r\n\t     * @returns void\r\n\t     */\r\n\t    function renderAzureSelectors() {\r\n\t        mainframe.getSingleAzureSelectors().each(function () { createDropdowns($(this), true); });\r\n\t        mainframe.getDoubleAzureSelectors().each(function () { createDropdowns($(this), false); });\r\n\t    }\r\n\t\r\n\t    return {\r\n\t        renderAzureSelectors: renderAzureSelectors\r\n\t    };\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ },\n\n/***/ 33:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function($) {/**\r\n\t * The Branch Selector component of the DOCS website\r\n\t *\r\n\t * Dependencies:\r\n\t *     - cookies: Read and write cookies to the website\r\n\t *     - urijs: Parse and append query string to the current URL\r\n\t *     - docs.mainframe: Construct/Manipulate selector DOM elements\r\n\t */\r\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(5), __webpack_require__(8), __webpack_require__(17),  __webpack_require__(23)], __WEBPACK_AMD_DEFINE_RESULT__ = function(cookies, URI, utilities, mainframe) {\r\n\t    \"use strict\";\r\n\t\r\n\t    /**\r\n\t     * Cookies[\"AUTHENTICATION_INFORMATION\"] = \"IsAuthenticated%3Dtrue\"\r\n\t     */\r\n\t    function isInTestEnvironment() {\r\n\t        var authenticationInfo = cookies.getCookie(\"AUTHENTICATION_INFORMATION\");\r\n\t        if (!authenticationInfo) {\r\n\t            return false;\r\n\t        }\r\n\t        var authenticationFields = authenticationInfo.split(\";\");\r\n\t        if (!authenticationFields || !authenticationFields.length) {\r\n\t            return false;\r\n\t        }\r\n\t        for (var i = 0; i < authenticationFields.length; i++) {\r\n\t            if (!authenticationFields[i]) {\r\n\t                return false;\r\n\t            }\r\n\t            var authKeyValuePair = authenticationFields[i].split(\"=\");\r\n\t            if (!authKeyValuePair || authKeyValuePair.length !== 2) {\r\n\t                return false;\r\n\t            }\r\n\t            if (authKeyValuePair[0].trim().toLowerCase() === \"isauthenticated\") {\r\n\t                return authKeyValuePair[1].trim().toLowerCase() === \"true\";\r\n\t            }\r\n\t        }\r\n\t        return false;\r\n\t    }\r\n\t\r\n\t    function getAvailableBranchesAsync() {\r\n\t        try {\r\n\t            var windowUrl = URI(window.location.href);\r\n\t            var baseUrlString = URI(window.location.href).origin();\r\n\t            var apiUrlString = \"/_api/branches?docPath=\" + encodeURIComponent(windowUrl.pathname());\r\n\t            var apiUrl = URI(apiUrlString, baseUrlString);\r\n\t            return utilities.loadJsonFileAsync(apiUrl.toString());\r\n\t        } catch (err) {\r\n\t            return $.when(null);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * Renders the branch selector if it is in the DEVINT or SANBOX environment.\r\n\t     * @returns {JQueryPromise} An async operation which represents the process of contructing the branch selector\r\n\t     */\r\n\t    function renderBranchSelectorAsync() {\r\n\t        if (!isInTestEnvironment()) {\r\n\t            return $.when();\r\n\t        }\r\n\t        return getAvailableBranchesAsync().done(function (branches) {\r\n\t            if (branches && branches.length) {\r\n\t                branches.sort();\r\n\t                var dropdown = mainframe.createBranchSelectorDropdown(branches);\r\n\t                dropdown.change(function () {\r\n\t                    var targetBranchName = dropdown.val();\r\n\t                    if (targetBranchName) {\r\n\t                        cookies.setCookie(\"CONTENT_BRANCH\", targetBranchName);\r\n\t                        window.location.href = URI(window.location.href).search(\"branch=\" + targetBranchName).toString();\r\n\t                    }\r\n\t                });\r\n\t                dropdown.val(cookies.getCookie(\"CONTENT_BRANCH\"));\r\n\t                mainframe.appendToSocialActions(dropdown);\r\n\t            }\r\n\t        });\r\n\t    }\r\n\t\r\n\t    return {\r\n\t        renderBranchSelectorAsync: renderBranchSelectorAsync\r\n\t    };\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ },\n\n/***/ 34:\n/***/ function(module, exports, __webpack_require__) {\n\n\t!/* require */(/* empty */function() { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(15), __webpack_require__(35), __webpack_require__(3), __webpack_require__(30), __webpack_require__(7)]; (function (config, callbacks, trace, util, locale) {\r\n\t    \"use strict\";\r\n\t    \r\n\t    var uiLocale = locale.getLanguageFromUrl(); // user preferred locale specified in url\r\n\t    // Comment disabled for all locales except en-us.\r\n\t    if (uiLocale && uiLocale.toLowerCase() === 'en-us') {\r\n\t        util.loadLibrary([config.paths.livefyre, config.paths.opencomment]).then(function () {\r\n\t            //open-commenting configurations.\r\n\t            var networkName = \"microsoft-int-0.fyre.co\", siteId = \"306034\";\r\n\t            if (location.hostname === \"docs.microsoft.com\") {\r\n\t                //Connect to open-commenting prod network when it's docs production environment.\r\n\t                networkName = \"microsoft.fyre.co\";\r\n\t                siteId = \"381623\";\r\n\t            }\r\n\t            var commentOptions = {\r\n\t                serviceProvider: \"livefyre\",\r\n\t                network: networkName,\r\n\t                siteId: siteId,\r\n\t                containerElementId: \"comments-container\",\r\n\t                //USER STORY 558932: Use document_id as unique identifier for DOCS commenting and side notes\r\n\t                documentIdMetaName: \"document_id\",\r\n\t                /* open-commenting side-note provides selectors option to find content on the page.\r\n\t                   It can be a selector string (such as '#content p, #content img'), a jQuery object (such as $('#content')),\r\n\t                   an array of DOM elements,or an object with two properties: include and exclude. */\r\n\t                sidenoteSelectors: {\r\n\t                    include: \"#main p, #main ul, #main ol\",\r\n\t                    exclude: \"div.button p, div.step-by-step p, li p, #metadata ul, ul ol, ol ul, ul ul, ol ol\"\r\n\t                },\r\n\t                localeMetaName: \"locale\", // content locale\r\n\t                theme: \"docs\",\r\n\t                commentCallback: function (data) {\r\n\t                    if (data.statusCode) {\r\n\t                        callbacks.reject(\"comment-init\", data.valueObject);\r\n\t                    } else {\r\n\t                        callbacks.resolve(\"comment-init\", data.valueObject);\r\n\t                    }\r\n\t                },\r\n\t                sidenoteCallback: function (data) {\r\n\t                    if (data.statusCode) {\r\n\t                        callbacks.reject(\"sidenote-init\", data.valueObject);\r\n\t                    } else {\r\n\t                        callbacks.resolve(\"sidenote-init\", data.valueObject);\r\n\t                    }\r\n\t                },\r\n\t                identityServiceCallback: function (data) {\r\n\t                    if (data.statusCode) {\r\n\t                        trace.traceError(data.valueObject.message, data.valueObject);\r\n\t                    }\r\n\t                }\r\n\t            };\r\n\t        \r\n\t            // load commenting widget\r\n\t            opencomment(commentOptions);\r\n\t        });\r\n\t    }\r\n\t\r\n\t}.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));}());\n\n/***/ },\n\n/***/ 35:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function($) {!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\r\n\t    \"use strict\";\r\n\t\r\n\t    var deferreds = {\r\n\t        \"comment-init\": $.Deferred(),\r\n\t        \"sidenote-init\": $.Deferred()\r\n\t    };\r\n\t\r\n\t    module.exports.attach = function (type, handler, errorHandler) {\r\n\t        var defer = deferreds[type];\r\n\t        if (defer) {\r\n\t            defer.promise().then(handler, errorHandler);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    module.exports.getPromise = function (type) {\r\n\t        var defer = deferreds[type];\r\n\t        if (defer) {\r\n\t            return defer.promise();\r\n\t        }\r\n\t        return null;\r\n\t    };\r\n\t\r\n\t    module.exports.resolve = function (type, valueObject) {\r\n\t        var defer = deferreds[type];\r\n\t        if (defer) {\r\n\t            defer.resolve(valueObject);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    module.exports.reject = function (type, valueObject) {\r\n\t        var defer = deferreds[type];\r\n\t        if (defer) {\r\n\t            defer.reject(valueObject);\r\n\t        }\r\n\t    };\r\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ },\n\n/***/ 36:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {(function(){\r\n\t    \"use strict\";\r\n\t\r\n\t    var Trace = __webpack_require__(3),\r\n\t        TraceCategory = Trace.TraceCategory;\r\n\t    var util = __webpack_require__(30);\r\n\t    var perfEvents = __webpack_require__(21);\r\n\t\r\n\t    if (window.insight) {\r\n\t        Trace.traceError(\"insight.js is loaded more than once.\");\r\n\t        return;\r\n\t    }\r\n\t    var insight = {};\r\n\t\r\n\t    insight.debugConsoleLogEnabled = false;\r\n\t    insight.debugLogMsgs = [];\r\n\t    insight.debugLog = function (inMsg) {\r\n\t        insight.debugLogMsgs.push(inMsg);\r\n\t        if (insight.debugConsoleLogEnabled) {\r\n\t            console.log(inMsg);\r\n\t        }\r\n\t    };\r\n\t    insight.getMetaTagContent = function (inMTName) {\r\n\t        try {\r\n\t            var myMTContent = $(\"meta[name='\" + inMTName + \"']\");\r\n\t            if (myMTContent && myMTContent.length > 0) {\r\n\t                myMTContent = myMTContent[myMTContent.length - 1].content;\r\n\t            } else {\r\n\t                myMTContent = null;\r\n\t            }\r\n\t            return myMTContent;\r\n\t        } catch (e) {\r\n\t            Trace.traceError(\"getMetaTagContent failed.\", e);\r\n\t            return null;\r\n\t        }\r\n\t    };\r\n\t    insight.setMetaTagContent = function (inMTName, inMTContent) {\r\n\t        if (!inMTContent) {\r\n\t            Trace.traceError(\"FALSE inMTContent found.\");\r\n\t            return;\r\n\t        }\r\n\t        if (insight.getMetaTagContent(inMTName) === null) {\r\n\t            var myMetaTag = document.createElement(\"meta\");\r\n\t            myMetaTag.name = inMTName;\r\n\t            myMetaTag.content = inMTContent;\r\n\t            document.getElementsByTagName(\"head\")[0].appendChild(myMetaTag);\r\n\t        } else {\r\n\t            $(\"meta[name='\" + inMTName + \"']\").attr(\"content\", inMTContent);\r\n\t        }\r\n\t    };\r\n\t    //Common function to fire custom event on clicked element\r\n\t    insight.processWEDCSCustomEventFromArray = function (inArray) {\r\n\t        if (typeof window.MscomCustomEvent !== \"function\") {\r\n\t            return;\r\n\t        } else if (!inArray || inArray.length === 0) {\r\n\t            window.MscomCustomEvent();\r\n\t            return;\r\n\t        }\r\n\t        window.MscomCustomEvent.apply(this, inArray);\r\n\t    };\r\n\t    ////////////////////// ERROR RELATED\r\n\t    var formatErrorObjectToWedcsArray = function (errorObject) {\r\n\t        var array = [];\r\n\t        if (!errorObject) {\r\n\t            return array;\r\n\t        }\r\n\t        if (errorObject.error) {\r\n\t            if (errorObject.isBubbled) {\r\n\t                if (errorObject.error.data) {\r\n\t                    array.push(\"ms.error\", JSON.stringify(errorObject.error.data).substring(0, 100));\r\n\t                }\r\n\t            } else {\r\n\t                array.push(\"ms.error\", errorObject.error.toString().substring(0, 100));\r\n\t            }\r\n\t        }\r\n\t        if (errorObject.message) {\r\n\t            array.push(\"ms.errormsg\", errorObject.message.substring(0, 30));\r\n\t        }\r\n\t        if (errorObject.source) {\r\n\t            array.push(\"ms.errorsrc\", errorObject.source);\r\n\t        }\r\n\t        if (errorObject.lineno) {\r\n\t            array.push(\"ms.errorlineno\", errorObject.lineno);\r\n\t        }\r\n\t        if (errorObject.colno) {\r\n\t            array.push(\"ms.errorcolno\", errorObject.colno);\r\n\t        }\r\n\t        return array;\r\n\t    };\r\n\t    var errorSubscriber = function (errorObject) {\r\n\t        try {\r\n\t            var tArray = formatErrorObjectToWedcsArray(errorObject);\r\n\t            if (tArray.length > 0) {\r\n\t                insight.processWEDCSCustomEventFromArray(tArray);\r\n\t            }\r\n\t        } catch (ex) {\r\n\t            if (window.console) {\r\n\t                console.error(ex.toString());\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    insight.subscribeErrors = function () {\r\n\t        var Errors = __webpack_require__(4);\r\n\t        Errors.subscribe(errorSubscriber);\r\n\t    };\r\n\t    ////////////////////// Subscribe Trace\r\n\t    var traceSubscriber = function (entry) {\r\n\t        if (!entry) {\r\n\t            return;\r\n\t        }\r\n\t        var navigationStart = window.performance.timing.navigationStart;\r\n\t        if (typeof navigationStart !== \"number\") {\r\n\t            return;\r\n\t        }\r\n\t        if (entry.category === TraceCategory.performance) {\r\n\t            var perfEvent = entry.data;\r\n\t\r\n\t            var customPerfArrary = [];\r\n\t            customPerfArrary.push(perfEvent.name, perfEvent.timeStamp.getTime() - navigationStart);\r\n\t\r\n\t            var array = [];\r\n\t            array.push(\"ms.cus.perf.timing\", customPerfArrary.join());\r\n\t            insight.processWEDCSCustomEventFromArray(array);\r\n\t        }\r\n\t    };\r\n\t    insight.subscribeTrace = function () {\r\n\t        Trace.subscribe(traceSubscriber);\r\n\t    };\r\n\t    ////////////////////// Comment Related\r\n\t    var commentSubscriber = function (widget) {\r\n\t        widget.on(\"commentPosted\", function (data) {\r\n\t            if (data && data.id) {\r\n\t                var array = [];\r\n\t                array.push(\"ms.commentid\", encodeURI(data.id));\r\n\t                array.push(\"ms.commentdt\", new Date().getTime());\r\n\t                array.push(\"ms.commentet\", \"commentPosted\");\r\n\t                insight.processWEDCSCustomEventFromArray(array);\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t    var commentErrorHandler = function (reason) {\r\n\t        Trace.traceError(\"comment loading failure\", reason);\r\n\t        var array = [];\r\n\t        array.push(\"ms.commenter\", encodeURI(JSON.stringify(reason)));\r\n\t        array.push(\"ms.commentet\", \"commentLoad\");\r\n\t        insight.processWEDCSCustomEventFromArray(array);\r\n\t    };\r\n\t    var sidenoteSubscriber = function (widget) {\r\n\t        widget.on(\"sidenotes.commentPosted\", function (data) {\r\n\t            if (data && data.id) {\r\n\t                var array = [];\r\n\t                array.push(\"ms.commentid\", encodeURI(data.id === null ? null : data.id.replace(\"@\", \"#\")));\r\n\t                array.push(\"ms.commentdt\", new Date().getTime());\r\n\t                array.push(\"ms.commentet\", \"sidenotePosted\");\r\n\t                insight.processWEDCSCustomEventFromArray(array);\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t    var sidenoteErrorHandler = function (reason) {\r\n\t        Trace.traceError(\"sidenote loading failure\", reason);\r\n\t        var array = [];\r\n\t        array.push(\"ms.commenter\", encodeURI(JSON.stringify(reason)));\r\n\t        array.push(\"ms.commentet\", \"sidenoteLoad\");\r\n\t        insight.processWEDCSCustomEventFromArray(array);\r\n\t    };\r\n\t    insight.setupLiveFyreTracking = function () {\r\n\t        var commenting = __webpack_require__(35);\r\n\t        var commentPromise = commenting.getPromise(\"comment-init\");\r\n\t        if(commentPromise) {\r\n\t            commentPromise.then(commentSubscriber, commentErrorHandler);\r\n\t        } else {\r\n\t            Trace.traceError(\"Failed to get comment promise from commenting-callback\");\r\n\t        }\r\n\t        var sidenotePromise = commenting.getPromise(\"sidenote-init\");\r\n\t        if(sidenotePromise) {\r\n\t            sidenotePromise.then(sidenoteSubscriber, sidenoteErrorHandler);\r\n\t        } else {\r\n\t            Trace.traceError(\"Failed to get sidenote promise from commenting-callback\");\r\n\t        }\r\n\t    };\r\n\t    ////////////////////// FOCUS EVENT\r\n\t    insight.firePageFocusEvent = function (type) {\r\n\t        insight.debugLog(\"stepped inside firePageFocusEvent function\");\r\n\t        var tArray = [];\r\n\t        tArray.push(\"ms.focuseventtime\", new Date().getTime());\r\n\t        tArray.push(\"ms.focusorblue\", type);\r\n\t        insight.processWEDCSCustomEventFromArray(tArray);\r\n\t    };\r\n\t    insight.setupPageFocusTracking = function () {\r\n\t\r\n\t        $(window).on(\"blur focus\", function (e) {\r\n\t            var prevType = $(this).data(\"prevType\");\r\n\t\r\n\t            if (prevType !== e.type) {   //reduce double fire issues\r\n\t                switch (e.type) {\r\n\t                    case \"blur\":\r\n\t                        insight.debugLog(\"Blured\");\r\n\t                        insight.firePageFocusEvent(\"Blured\");\r\n\t                        break;\r\n\t                    case \"focus\":\r\n\t                        insight.debugLog(\"Focused\");\r\n\t                        insight.firePageFocusEvent(\"Focused\");\r\n\t                        break;\r\n\t                }\r\n\t            }\r\n\t            $(this).data(\"prevType\", e.type);\r\n\t        });\r\n\t\r\n\t    };\r\n\t    ////////////////////// COPY EVENT\r\n\t    insight.fireCopyEvent = function (txt, length) {\r\n\t        insight.debugLog(\"stepped inside fireCopyEvent function\");\r\n\t        var tArray = [];\r\n\t        tArray.push(\"ms.copyeventtime\", new Date().getTime());\r\n\t        tArray.push(\"ms.copycontent\", txt);\r\n\t        tArray.push(\"ms.copycontentlength\", length);\r\n\t        insight.processWEDCSCustomEventFromArray(tArray);\r\n\t    };\r\n\t    insight.setupCopyTracking = function () {\r\n\t        $(window).bind(\"copy\", function (e) {\r\n\t            var txt = window.getSelection().toString();\r\n\t            var length = txt.length;\r\n\t            txt = txt.substring(0, 20); //truncate to limit the length of WEDCS event\r\n\t            insight.fireCopyEvent(txt, length);\r\n\t        });\r\n\t    };\r\n\t    ////////////////////// SWITCHER SELECTION\r\n\t    insight.fireSwitcherEvent = function (switcher, selectedValue) {\r\n\t        insight.debugLog(\"stepped inside fireSwitcherEvent function\");\r\n\t        var tArray = [];\r\n\t        tArray.push(\"ms.switcheventtime\", new Date().getTime());\r\n\t        tArray.push(\"ms.switcher\", switcher);\r\n\t        tArray.push(\"ms.switchervalue\", selectedValue);\r\n\t        insight.processWEDCSCustomEventFromArray(tArray);\r\n\t    };\r\n\t    insight.setupSwitcherTracking = function () {\r\n\t        $(\".menu-theme select\").change(function () {\r\n\t            var selectedValue = $(\".menu-theme select\").val();\r\n\t            insight.fireSwitcherEvent(\"theme\", selectedValue);\r\n\t        });\r\n\t        $('.menu-platform select').change(function () {\r\n\t            var selectedValue = $(\".menu-platform select\").val();\r\n\t            insight.fireSwitcherEvent(\"platform\", selectedValue);\r\n\t        });\r\n\t        $('.menu-lang select').change(function () {\r\n\t            var selectedValue = $(\".menu-lang select\").val();\r\n\t            insight.fireSwitcherEvent(\"lang\", selectedValue);\r\n\t        });\r\n\t    };\r\n\t    ////////////////////// SCROLL TRACKING\r\n\t    //Scroll Area definition\r\n\t    insight.scrollArea = function (inName) {\r\n\t        this.name = inName;\r\n\t        this.scrollNA = false;\r\n\t        this.scrollQuarter = false;\r\n\t        this.scrollHalf = false;\r\n\t        this.scrollThreeQuarter = false;\r\n\t        this.scrollBot = false;\r\n\t    };\r\n\t    //Track multiple scroll areas per page\r\n\t    insight.currScrollArea = null;\r\n\t    insight.scrollAreaList = [];\r\n\t\r\n\t    insight.setCurrScrollArea = function (inIndex) {\r\n\t        if (typeof inIndex !== \"number\") {\r\n\t            return;\r\n\t        } else if (insight.scrollAreaList.length <= inIndex) {\r\n\t            return;\r\n\t        }\r\n\t\r\n\t        insight.currScrollArea = insight.scrollAreaList[inIndex];\r\n\t    };\r\n\t\r\n\t    //Page dimension variables\r\n\t    insight.scrollBottomElement = null;\r\n\t    insight.scrollPageHeight = -1;\r\n\t    insight.viewportBottom = -1;\r\n\t    insight.refreshScrollPageDimVars = function () {\r\n\t        var tBottom = 0;\r\n\t        if (insight.scrollBottomElement) {\r\n\t            tBottom = insight.scrollBottomElement.getBoundingClientRect().top + window.pageYOffset;\r\n\t        }\r\n\t        if (tBottom <= 0) {\r\n\t            tBottom = document.body.getBoundingClientRect().height;\r\n\t        }\r\n\t        insight.scrollPageHeight = tBottom;\r\n\t        insight.viewportBottom = window.pageYOffset + window.innerHeight;\r\n\t    };\r\n\t    insight.suppressMobileEvents = false;\r\n\t    insight.fireScrollEvent = function (inScrollValue) {\r\n\t        insight.fireScrollEvent(inScrollValue, \"scroll\");\r\n\t    };\r\n\t    insight.fireScrollStopEvent = function (inScrollValue) {\r\n\t        insight.fireScrollEvent(inScrollValue, \"scroll-stop\");\r\n\t    };\r\n\t    insight.fireScrollEvent = function (inScrollValue, eventType) {\r\n\t        insight.debugLog(\"stepped inside fireScrollEvent function\");\r\n\t        var tArray = [];\r\n\t        tArray.push(\"ms.pgarea\", \"body\");\r\n\t        tArray.push(\"ms.scnum\", \"scroll-\" + inScrollValue);\r\n\t        tArray.push(\"ms.interactiontype\", \"4\");\r\n\t        tArray.push(\"ms.scn\", eventType);\r\n\t        insight.processWEDCSCustomEventFromArray(tArray);\r\n\t    };\r\n\t    insight.processScroll = function (stopEvent) {\r\n\t        window.clearTimeout(insight.scrollResizeTimer);\r\n\t        if (insight.currScrollArea === null) {\r\n\t            return;\r\n\t        }\r\n\t        insight.refreshScrollPageDimVars();\r\n\t        if (insight.scrollPageHeight <= 0) {\r\n\t            return;\r\n\t        } else if (insight.suppressMobileEvents && window.innerWidth <= 510) {\r\n\t            return;\r\n\t        }\r\n\t\r\n\t        var tCurrPercent = insight.viewportBottom / insight.scrollPageHeight;\r\n\t\r\n\t        if (stopEvent === true) {\r\n\t            insight.fireScrollStopEvent(Math.round(tCurrPercent * 100) + \"%\");\r\n\t            return;\r\n\t        }\r\n\t\r\n\t        if (window.innerHeight > insight.scrollPageHeight * 0.90) {\r\n\t            //Visitor can see the whole page, fire special -na event\r\n\t            if (!insight.currScrollArea.scrollNA) {\r\n\t                insight.currScrollArea.scrollNA = true;\r\n\t                insight.fireScrollEvent(\"na\");\r\n\t            }\r\n\t            return;\r\n\t        }\r\n\t\r\n\t        if (tCurrPercent > 0.25 && !insight.currScrollArea.scrollQuarter) {\r\n\t            insight.currScrollArea.scrollQuarter = true;\r\n\t            insight.fireScrollEvent(\"25%\");\r\n\t        }\r\n\t        if (tCurrPercent > 0.50 && !insight.currScrollArea.scrollHalf) {\r\n\t            insight.currScrollArea.scrollHalf = true;\r\n\t            insight.fireScrollEvent(\"50%\");\r\n\t        }\r\n\t        if (tCurrPercent > 0.75 && !insight.currScrollArea.scrollThreeQuarter) {\r\n\t            insight.currScrollArea.scrollThreeQuarter = true;\r\n\t            insight.fireScrollEvent(\"75%\");\r\n\t        }\r\n\t        if (tCurrPercent > 0.99 && !insight.currScrollArea.scrollBot) {\r\n\t            insight.currScrollArea.scrollBot = true;\r\n\t            insight.fireScrollEvent(\"100%\");\r\n\t        }\r\n\t    };\r\n\t\r\n\t    insight.scrollTimer = null;\r\n\t    insight.scrollResizeTimer = 0;\r\n\t    insight.setupScrollTracking = function () {\r\n\t        insight.scrollBottomElement = $(\"#footer\")[0];\r\n\t\r\n\t        insight.scrollAreaList.push(new insight.scrollArea(\"body\"));\r\n\t        insight.setCurrScrollArea(0);\r\n\t\r\n\t        window.addEventListener(\"scroll\", function () {\r\n\t            insight.processScroll(false);\r\n\t        });\r\n\t\r\n\t        //catch scroll stop event (stop more than 10 seconds)\r\n\t        if (insight.scrollTimer !== null) {\r\n\t            window.clearTimeout(insight.scrollTimer);\r\n\t        }\r\n\t        insight.scrollTimer = window.setTimeout(function () {\r\n\t            insight.processScroll(true);\r\n\t        }, 1000 * 10);\r\n\t\r\n\t        //Note: resize also catches zoom in/out\r\n\t        $(window).resize(function () {\r\n\t            window.clearTimeout(insight.scrollResizeTimer);\r\n\t            insight.scrollResizeTimer = window.setTimeout(function () {\r\n\t                insight.processScroll(false);\r\n\t            }, 500);\r\n\t        });\r\n\t    };\r\n\t    insight.extractMetaFromAmbientContext = function () {\r\n\t        if (window.AmbientContext) {\r\n\t            for (var key in window.AmbientContext) {\r\n\t                if (window.AmbientContext.hasOwnProperty(key)) {\r\n\t                    var content = window.AmbientContext[key];\r\n\t                    if (content) {\r\n\t                        if (!(typeof(content) === \"string\" || content instanceof String)) {\r\n\t                            content = JSON.stringify(content);\r\n\t                        }\r\n\t                    }\r\n\t                    $(\"head\").append(\"<meta name='ms.\" + encodeURI(key.replace(\".\", \"_\")) +\r\n\t                        \"' content='\" + encodeURI(content) + \"' />\");\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    insight.getPerfTiming = function () {\r\n\t        if (!window.performance || !window.performance.timing) {\r\n\t            return null;\r\n\t        }\r\n\t        var navigationStart = window.performance.timing.navigationStart;\r\n\t        if (typeof navigationStart !== \"number\") {\r\n\t            return null;\r\n\t        }\r\n\t        //Navigation timing attributes, ref: https://w3c.github.io/navigation-timing/\r\n\t        var keys = [\"redirectStart\", \"redirectEnd\", \"fetchStart\", \"connectStart\", \"connectEnd\", \"requestStart\", \"responseStart\",\r\n\t                    \"responseEnd\", \"domLoading\", \"domInteractive\", \"domContentLoadedEventStart\", \"domContentLoadedEventEnd\",\r\n\t                    \"domComplete\", \"loadEventStart\", \"loadEventEnd\"];\r\n\t        var timeInfoArr = [];\r\n\t        for (var index = 0; index < keys.length; index++) {\r\n\t            var key = keys[index];\r\n\t            if (typeof window.performance.timing[key] !== \"number\") {\r\n\t                timeInfoArr.push(\"\");\r\n\t            } else {\r\n\t                var elapsed = window.performance.timing[key] !== 0 ? window.performance.timing[key] - navigationStart : \"\";\r\n\t                timeInfoArr.push(elapsed);\r\n\t            }\r\n\t        }\r\n\t        return timeInfoArr.join();\r\n\t    };\r\n\t    var biMapping = {\r\n\t        \"author\": \"ms.author\",\r\n\t        \"contentlang\": \"ms.contentlang\",\r\n\t        \"depot_name\": \"ms.depotname\",\r\n\t        \"document_id\": \"ms.documentid\",\r\n\t        \"experiment_id\": \"ms.experimentid\",\r\n\t        \"gitcommit\": \"ms.gitcommit\",\r\n\t        \"locale\": \"ms.contentlang\",\r\n\t        \"original_content_git_url\": \"ms.giturl\",\r\n\t        \"pagetype\": \"ms.opspagetype\",\r\n\t        \"site_name\": \"ms.sitename\",\r\n\t        \"updated_at\": \"ms.publishtime\"\r\n\t    };\r\n\t    insight.setupBiTags = function () {\r\n\t        for (var key in biMapping) {\r\n\t            var content = insight.getMetaTagContent(key);\r\n\t            if (content !== null) {\r\n\t                if (insight.getMetaTagContent(biMapping[key]) === null) {\r\n\t                    insight.setMetaTagContent(biMapping[key], content);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        var locale = __webpack_require__(7);\r\n\t        var currentLocale = locale.getLanguageFromUrl();\r\n\t        insight.setMetaTagContent(\"ms.locale\", encodeURI(currentLocale));\r\n\t\r\n\t        //add ms.lang and ms.loc if not exist\r\n\t        if (currentLocale) {\r\n\t            var strs = currentLocale.split(\"-\");\r\n\t            if (insight.getMetaTagContent(\"ms.lang\") === null) {\r\n\t                insight.setMetaTagContent(\"ms.lang\", encodeURI(strs[0]));\r\n\t            }\r\n\t            if (insight.getMetaTagContent(\"ms.loc\") === null) {\r\n\t                insight.setMetaTagContent(\"ms.loc\", strs.length > 1 ? encodeURI(strs[1]) : \"\");\r\n\t            }\r\n\t        }\r\n\t\r\n\t        //depot_name is an OP specific metadata, if it exists while ms.contentsource tag is missing, pick it up\r\n\t        //Insight team relies on ms.contentsource to find out all OP pages from WEDCS ocean\r\n\t        if (insight.getMetaTagContent(\"depot_name\") !== null &&\r\n\t                insight.getMetaTagContent(\"ms.contentsource\") === null) {\r\n\t            insight.setMetaTagContent(\"ms.contentsource\", \"OP\");\r\n\t        }\r\n\t    };\r\n\t    insight.isGlobalMetadataEnabled = function (meta) {\r\n\t        if (insight.getMetaTagContent(meta) !== null) {\r\n\t            return true;\r\n\t        }\r\n\t        return false;\r\n\t    };\r\n\t    insight.listMSMetadata = function () {\r\n\t        var res = [];\r\n\t        var arr = $(\"meta[name^='ms.']\");\r\n\t        for (var i = 0; i < arr.length; i++) {\r\n\t            res.push(arr[i].name);\r\n\t        }\r\n\t        return res.join(\", \");\r\n\t    };\r\n\t    insight.enableWEDCS = function () {\r\n\t        //WEDCS base settings\r\n\t        window.varClickTracking = 1;\r\n\t        window.varCustomerTracking = 0;\r\n\t        window.varAutoFirePV = 1;\r\n\t        window.route = \"\";\r\n\t        window.ctrl = \"\";\r\n\t\r\n\t        !/* require */(/* empty */function() { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(15)]; (function(config){\r\n\t            util.loadLibrary(config.paths.wedcs).then(function () {\r\n\t                insight.subscribeErrors();\r\n\t                insight.subscribeTrace();\r\n\t                insight.setupPageFocusTracking();\r\n\t                insight.setupScrollTracking();\r\n\t                insight.setupCopyTracking();\r\n\t                insight.setupSwitcherTracking();\r\n\t                insight.setupLiveFyreTracking();\r\n\t            });\r\n\t        }.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));}());\r\n\t    };\r\n\t\r\n\t    $(document).ready(function () {\r\n\t        try {\r\n\t            insight.extractMetaFromAmbientContext();\r\n\t            insight.setupBiTags();\r\n\t\r\n\t            //TODO: remove following two lines after backend job is updated to use custom event instead of page view event\r\n\t            //For now, the meta should be added before load ms.js\r\n\t            var perfInfo = insight.getPerfTiming();\r\n\t            if (perfInfo) {\r\n\t                $(\"head\").append(\"<meta name='ms.perf.timing' content='\" + perfInfo + \"' />\");\r\n\t            }\r\n\t\r\n\t            insight.enableWEDCS();\r\n\t        } catch (ex) {\r\n\t            Trace.traceError(ex.toString());\r\n\t        }\r\n\t    });\r\n\t    //Expose jQuery for easy debugging\r\n\t    insight.jQuery = $;\r\n\t    window.insight = insight;\r\n\t})();\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ },\n\n/***/ 37:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(18), __webpack_require__(7)], __WEBPACK_AMD_DEFINE_RESULT__ = function (metadata, locale) {\r\n\t    \"use strict\";\r\n\t    // connect to int by default.\r\n\t    var environment = \"int\";\r\n\t    if (location.hostname === \"docs.microsoft.com\") {\r\n\t        //only connect to prod when it's docs production environment.\r\n\t        environment = \"prod\";\r\n\t    }\r\n\t    var openFeedbackOptions = {\r\n\t        environment: environment,\r\n\t        containerElementId: \"openFeedbackContainer\",\r\n\t        siteNameMetaName: \"site_name\",\r\n\t        documentMetaName: \"document_id\",\r\n\t        localeMetaName: \"locale\", // content locale\r\n\t        uiLocale: locale.getLanguageFromUrl() // user preferred locale specified in url\r\n\t    };\r\n\t\r\n\t    // USER STORY 558937: Send both document_id and ms.assetid when call rating service API\r\n\t    if (metadata.get(\"ms.assetid\")) {\r\n\t        openFeedbackOptions.propertyBag = {\r\n\t            \"ms.assetid\": metadata.get(\"ms.assetid\")\r\n\t        };\r\n\t    }\r\n\t    // load openfeedback\r\n\t    window.openFeedbackOptions = openFeedbackOptions;\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n\n/***/ 38:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\r\n\t    \"use strict\";\r\n\t\r\n\t    /* jshint ignore:start */\r\n\t    (function(e,t,c,n){var o,s,a;e.SMCX=e.SMCX||[],t.getElementById(n)||(o=t.getElementsByTagName(c),s=o[o.length-1],a=t.createElement(c),a.type=\"text/javascript\",a.async=!0,a.id=n,a.src=[\"https:\"===location.protocol?\"https://\":\"http://\",\"widget.surveymonkey.com/collect/website/js/79yNbHm5_2Bc09cabC381UfD6Mz_2FuWCiepbBF6EB_2FT0Ea4MCk82Bh_2BApaijjR77BSR.js\"].join(\"\"),s.parentNode.insertBefore(a,s))})(window,document,\"script\",\"smcx-sdk\");\r\n\t    /* jshint ignore:end */\r\n\t\r\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** 1ecd4cf6fb75c75d4aed.js\n **/","/**\r\n * The Azure Selector component of the DOCS website.\r\n * Azure Selector is a component consists of one or two dropdowns displayed inline. When all of the dropdowns has a valid\r\n * value, the website will jump to the target page. If the user selects a value in one of the dropdown, the other dropdown\r\n * will also populate all the available values accordign the first selected one.\r\n *\r\n * Dependencies:\r\n *     - urijs: Find the current selected item by comparing the URLs\r\n *     - docs.mainframe: Construct/Manipulate Azure DOM elements\r\n */\r\n\r\ndefine([\"urijs\", \"docs.mainframe\"], function(URI, mainframe) {\r\n    \"use strict\";\r\n\r\n    // I will do a unified implementation of the Azure Selector for both one-dropdown and two-dropdowns.\r\n    // For the single azure selector, the input HTML would like to be:\r\n    // <div class=\"op_single_selector\">\r\n    //   <ul>\r\n    //     <li><a href=\"../a1.html\">A1</a></li>\r\n    //     <li><a href=\"../a2.html\">A2</a></li>\r\n    //     <li><a href=\"../a3.html\">A3</a></li>\r\n    //   </ul>\r\n    // </div>\r\n    //\r\n    // For the double azure selectors, the input HTML would look like:\r\n    // <div class=\"op_multi_selector\" title1=\"First Opt\" title2=\"Second Opt\">\r\n    //   <ul>\r\n    //     <li><a href=\"../c1.html\">(A1 | B1)</a></li>\r\n    //     <li><a href=\"../c2.html\">(A1 | B2)</a></li>\r\n    //     <li><a href=\"../c3.html\">(A2 | B1)</a></li>\r\n    //     <li><a href=\"../c4.html\">(A2 | B3)</a></li>\r\n    //     <li><a href=\"../c5.html\">(A3 | B1)</a></li>\r\n    //     <li><a href=\"../c6.html\">(A3 | B2)</a></li>\r\n    //     <li><a href=\"../c7.html\">(A3 | B3)</a></li>\r\n    //   </ul>\r\n    // </div>\r\n\r\n    /**\r\n     * First of all, we need to generate a Dictionary of the available options. For example, the mapping table of the single azure selector should be like:\r\n     * {\r\n     *     A1: { default: \"../a1.html\" },\r\n     *     A2: { default: \"../a2.html\" },\r\n     *     A3: { default: \"../a3.html\" }\r\n     * }\r\n     * But the mapping table for the double azure selectors would be a little bit compilicated:\r\n     * {\r\n     *     A1: {\r\n     *         B1: \"../c1.html\",\r\n     *         B2: \"../c2.html\"\r\n     *     }\r\n     *     A2: {\r\n     *         B1: \"../c3.html\",\r\n     *         B3: \"../c4.html\"\r\n     *     },\r\n     *     A3: {\r\n     *         B1: \"../c5.html\",\r\n     *         B2: \"../c6.html\",\r\n     *         B3: \"../c7.html\"\r\n     *     }\r\n     * }\r\n     */\r\n    function generateOptionsMap(selectorDivElement, isSingleSelector) {\r\n        var optionsMap = {};\r\n        mainframe.getAzureSelectorAnchors(selectorDivElement).each(function () {\r\n            if ($(this) && $(this).text()) {\r\n                var contents = (isSingleSelector ? [$(this).text(), \"default\"] : $(this).text().trim().slice(1, -1).split(\"|\"));\r\n                if (contents.length === 2) {\r\n                    var firstOption = contents[0].trim();\r\n                    var secondOption = contents[1].trim();\r\n                    var targetLink = $(this).attr(\"href\");\r\n                    if (firstOption && secondOption && targetLink) {\r\n                        if (!optionsMap[firstOption]) {\r\n                            optionsMap[firstOption] = {};\r\n                        }\r\n                        optionsMap[firstOption][secondOption] = targetLink;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return optionsMap;\r\n    }\r\n\r\n    /**\r\n     * Get the current selected options from the optionsMap and return a two-element tuple. For the single selector, the second option is always \"default\".\r\n     */\r\n    function getCurrentSelectedOptions(optionsMap, isSingleSelector) {\r\n        var browserUrlString = window.location.href.toLowerCase();\r\n        for (var mainOptionValue in optionsMap) {\r\n            for (var secondaryOptionValue in optionsMap[mainOptionValue]) {\r\n                var targetUrlString = optionsMap[mainOptionValue][secondaryOptionValue].toLowerCase();\r\n                if (URI(targetUrlString, browserUrlString).equals(browserUrlString)) {\r\n                    return [mainOptionValue, secondaryOptionValue];\r\n                }\r\n            }\r\n        }\r\n        return [null, null];\r\n    }\r\n\r\n    /**\r\n     * Next, one or two dropdowns are need to be created according to the generated optionsMap. The dropdowns are differentiate by main and secondary.\r\n     * The secondary dropdown's availble options will always be populated according to the main dropdown's current selection (If no item is selected, just\r\n     * make the secondary dropdown's availble options to empty).\r\n     */\r\n    function createDropdowns(selectorDivElement, isSingleSelector) {\r\n\r\n        function dropdownItemTemplate(key) { return [key, key]; }\r\n        function jumpToUrl(targetUrl) { window.location.href = targetUrl; }\r\n\r\n        var optionsMap = generateOptionsMap(selectorDivElement, isSingleSelector);\r\n        var selectedOptions = getCurrentSelectedOptions(optionsMap, isSingleSelector);\r\n\r\n        var container = mainframe.createAzureSelectorsContainer();\r\n        var firstDropdown = mainframe.createAzureSelectorDropdown(container, selectorDivElement.attr(\"title1\"));\r\n        var secondDropdown = null;\r\n        mainframe.populateDropdownOptions(firstDropdown, optionsMap, dropdownItemTemplate);\r\n        firstDropdown.val(selectedOptions[0]);\r\n        if (!isSingleSelector) {\r\n            secondDropdown = mainframe.createAzureSelectorDropdown(container, selectorDivElement.attr(\"title2\"));\r\n            firstDropdown.change(function () {\r\n                mainframe.populateDropdownOptions(secondDropdown, firstDropdown.val() ? optionsMap[firstDropdown.val()] : {}, dropdownItemTemplate);\r\n            });\r\n            secondDropdown.change(function () {\r\n                if (firstDropdown.val() && secondDropdown.val()) {\r\n                    jumpToUrl(optionsMap[firstDropdown.val()][secondDropdown.val()]);\r\n                }\r\n            });\r\n            firstDropdown.change();\r\n            secondDropdown.val(selectedOptions[1]);\r\n        } else {\r\n            firstDropdown.change(function () {\r\n                if (firstDropdown.val()) {\r\n                    jumpToUrl(optionsMap[firstDropdown.val()][\"default\"]);\r\n                }\r\n            });\r\n        }\r\n\r\n        selectorDivElement.replaceWith(container);\r\n    }\r\n\r\n    /**\r\n     * This function will convert both the Azure Single Selector as well as the Azure Double Selector HTMLs to the corresponding dropdown within the text.\r\n     * @returns void\r\n     */\r\n    function renderAzureSelectors() {\r\n        mainframe.getSingleAzureSelectors().each(function () { createDropdowns($(this), true); });\r\n        mainframe.getDoubleAzureSelectors().each(function () { createDropdowns($(this), false); });\r\n    }\r\n\r\n    return {\r\n        renderAzureSelectors: renderAzureSelectors\r\n    };\r\n});\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./docs.azureselector.js\n ** module id = 32\n ** module chunks = 1\n **/","/**\r\n * The Branch Selector component of the DOCS website\r\n *\r\n * Dependencies:\r\n *     - cookies: Read and write cookies to the website\r\n *     - urijs: Parse and append query string to the current URL\r\n *     - docs.mainframe: Construct/Manipulate selector DOM elements\r\n */\r\ndefine([\"cookies\", \"urijs\", \"docs.utilities\",  \"docs.mainframe\"], function(cookies, URI, utilities, mainframe) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Cookies[\"AUTHENTICATION_INFORMATION\"] = \"IsAuthenticated%3Dtrue\"\r\n     */\r\n    function isInTestEnvironment() {\r\n        var authenticationInfo = cookies.getCookie(\"AUTHENTICATION_INFORMATION\");\r\n        if (!authenticationInfo) {\r\n            return false;\r\n        }\r\n        var authenticationFields = authenticationInfo.split(\";\");\r\n        if (!authenticationFields || !authenticationFields.length) {\r\n            return false;\r\n        }\r\n        for (var i = 0; i < authenticationFields.length; i++) {\r\n            if (!authenticationFields[i]) {\r\n                return false;\r\n            }\r\n            var authKeyValuePair = authenticationFields[i].split(\"=\");\r\n            if (!authKeyValuePair || authKeyValuePair.length !== 2) {\r\n                return false;\r\n            }\r\n            if (authKeyValuePair[0].trim().toLowerCase() === \"isauthenticated\") {\r\n                return authKeyValuePair[1].trim().toLowerCase() === \"true\";\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function getAvailableBranchesAsync() {\r\n        try {\r\n            var windowUrl = URI(window.location.href);\r\n            var baseUrlString = URI(window.location.href).origin();\r\n            var apiUrlString = \"/_api/branches?docPath=\" + encodeURIComponent(windowUrl.pathname());\r\n            var apiUrl = URI(apiUrlString, baseUrlString);\r\n            return utilities.loadJsonFileAsync(apiUrl.toString());\r\n        } catch (err) {\r\n            return $.when(null);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Renders the branch selector if it is in the DEVINT or SANBOX environment.\r\n     * @returns {JQueryPromise} An async operation which represents the process of contructing the branch selector\r\n     */\r\n    function renderBranchSelectorAsync() {\r\n        if (!isInTestEnvironment()) {\r\n            return $.when();\r\n        }\r\n        return getAvailableBranchesAsync().done(function (branches) {\r\n            if (branches && branches.length) {\r\n                branches.sort();\r\n                var dropdown = mainframe.createBranchSelectorDropdown(branches);\r\n                dropdown.change(function () {\r\n                    var targetBranchName = dropdown.val();\r\n                    if (targetBranchName) {\r\n                        cookies.setCookie(\"CONTENT_BRANCH\", targetBranchName);\r\n                        window.location.href = URI(window.location.href).search(\"branch=\" + targetBranchName).toString();\r\n                    }\r\n                });\r\n                dropdown.val(cookies.getCookie(\"CONTENT_BRANCH\"));\r\n                mainframe.appendToSocialActions(dropdown);\r\n            }\r\n        });\r\n    }\r\n\r\n    return {\r\n        renderBranchSelectorAsync: renderBranchSelectorAsync\r\n    };\r\n});\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./docs.branchselector.js\n ** module id = 33\n ** module chunks = 1\n **/","require([\"docs.config\", \"commenting-callback\", \"trace\", 'util', 'locale'], function (config, callbacks, trace, util, locale) {\r\n    \"use strict\";\r\n    \r\n    var uiLocale = locale.getLanguageFromUrl(); // user preferred locale specified in url\r\n    // Comment disabled for all locales except en-us.\r\n    if (uiLocale && uiLocale.toLowerCase() === 'en-us') {\r\n        util.loadLibrary([config.paths.livefyre, config.paths.opencomment]).then(function () {\r\n            //open-commenting configurations.\r\n            var networkName = \"microsoft-int-0.fyre.co\", siteId = \"306034\";\r\n            if (location.hostname === \"docs.microsoft.com\") {\r\n                //Connect to open-commenting prod network when it's docs production environment.\r\n                networkName = \"microsoft.fyre.co\";\r\n                siteId = \"381623\";\r\n            }\r\n            var commentOptions = {\r\n                serviceProvider: \"livefyre\",\r\n                network: networkName,\r\n                siteId: siteId,\r\n                containerElementId: \"comments-container\",\r\n                //USER STORY 558932: Use document_id as unique identifier for DOCS commenting and side notes\r\n                documentIdMetaName: \"document_id\",\r\n                /* open-commenting side-note provides selectors option to find content on the page.\r\n                   It can be a selector string (such as '#content p, #content img'), a jQuery object (such as $('#content')),\r\n                   an array of DOM elements,or an object with two properties: include and exclude. */\r\n                sidenoteSelectors: {\r\n                    include: \"#main p, #main ul, #main ol\",\r\n                    exclude: \"div.button p, div.step-by-step p, li p, #metadata ul, ul ol, ol ul, ul ul, ol ol\"\r\n                },\r\n                localeMetaName: \"locale\", // content locale\r\n                theme: \"docs\",\r\n                commentCallback: function (data) {\r\n                    if (data.statusCode) {\r\n                        callbacks.reject(\"comment-init\", data.valueObject);\r\n                    } else {\r\n                        callbacks.resolve(\"comment-init\", data.valueObject);\r\n                    }\r\n                },\r\n                sidenoteCallback: function (data) {\r\n                    if (data.statusCode) {\r\n                        callbacks.reject(\"sidenote-init\", data.valueObject);\r\n                    } else {\r\n                        callbacks.resolve(\"sidenote-init\", data.valueObject);\r\n                    }\r\n                },\r\n                identityServiceCallback: function (data) {\r\n                    if (data.statusCode) {\r\n                        trace.traceError(data.valueObject.message, data.valueObject);\r\n                    }\r\n                }\r\n            };\r\n        \r\n            // load commenting widget\r\n            opencomment(commentOptions);\r\n        });\r\n    }\r\n\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./commenting.js\n ** module id = 34\n ** module chunks = 1\n **/","define(\"commenting-callback\", function () {\r\n    \"use strict\";\r\n\r\n    var deferreds = {\r\n        \"comment-init\": $.Deferred(),\r\n        \"sidenote-init\": $.Deferred()\r\n    };\r\n\r\n    module.exports.attach = function (type, handler, errorHandler) {\r\n        var defer = deferreds[type];\r\n        if (defer) {\r\n            defer.promise().then(handler, errorHandler);\r\n        }\r\n    };\r\n\r\n    module.exports.getPromise = function (type) {\r\n        var defer = deferreds[type];\r\n        if (defer) {\r\n            return defer.promise();\r\n        }\r\n        return null;\r\n    };\r\n\r\n    module.exports.resolve = function (type, valueObject) {\r\n        var defer = deferreds[type];\r\n        if (defer) {\r\n            defer.resolve(valueObject);\r\n        }\r\n    };\r\n\r\n    module.exports.reject = function (type, valueObject) {\r\n        var defer = deferreds[type];\r\n        if (defer) {\r\n            defer.reject(valueObject);\r\n        }\r\n    };\r\n});\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./commenting-callback.js\n ** module id = 35\n ** module chunks = 1 4 6\n **/","(function(){\r\n    \"use strict\";\r\n\r\n    var Trace = require(\"trace\"),\r\n        TraceCategory = Trace.TraceCategory;\r\n    var util = require('util');\r\n    var perfEvents = require('perf.events');\r\n\r\n    if (window.insight) {\r\n        Trace.traceError(\"insight.js is loaded more than once.\");\r\n        return;\r\n    }\r\n    var insight = {};\r\n\r\n    insight.debugConsoleLogEnabled = false;\r\n    insight.debugLogMsgs = [];\r\n    insight.debugLog = function (inMsg) {\r\n        insight.debugLogMsgs.push(inMsg);\r\n        if (insight.debugConsoleLogEnabled) {\r\n            console.log(inMsg);\r\n        }\r\n    };\r\n    insight.getMetaTagContent = function (inMTName) {\r\n        try {\r\n            var myMTContent = $(\"meta[name='\" + inMTName + \"']\");\r\n            if (myMTContent && myMTContent.length > 0) {\r\n                myMTContent = myMTContent[myMTContent.length - 1].content;\r\n            } else {\r\n                myMTContent = null;\r\n            }\r\n            return myMTContent;\r\n        } catch (e) {\r\n            Trace.traceError(\"getMetaTagContent failed.\", e);\r\n            return null;\r\n        }\r\n    };\r\n    insight.setMetaTagContent = function (inMTName, inMTContent) {\r\n        if (!inMTContent) {\r\n            Trace.traceError(\"FALSE inMTContent found.\");\r\n            return;\r\n        }\r\n        if (insight.getMetaTagContent(inMTName) === null) {\r\n            var myMetaTag = document.createElement(\"meta\");\r\n            myMetaTag.name = inMTName;\r\n            myMetaTag.content = inMTContent;\r\n            document.getElementsByTagName(\"head\")[0].appendChild(myMetaTag);\r\n        } else {\r\n            $(\"meta[name='\" + inMTName + \"']\").attr(\"content\", inMTContent);\r\n        }\r\n    };\r\n    //Common function to fire custom event on clicked element\r\n    insight.processWEDCSCustomEventFromArray = function (inArray) {\r\n        if (typeof window.MscomCustomEvent !== \"function\") {\r\n            return;\r\n        } else if (!inArray || inArray.length === 0) {\r\n            window.MscomCustomEvent();\r\n            return;\r\n        }\r\n        window.MscomCustomEvent.apply(this, inArray);\r\n    };\r\n    ////////////////////// ERROR RELATED\r\n    var formatErrorObjectToWedcsArray = function (errorObject) {\r\n        var array = [];\r\n        if (!errorObject) {\r\n            return array;\r\n        }\r\n        if (errorObject.error) {\r\n            if (errorObject.isBubbled) {\r\n                if (errorObject.error.data) {\r\n                    array.push(\"ms.error\", JSON.stringify(errorObject.error.data).substring(0, 100));\r\n                }\r\n            } else {\r\n                array.push(\"ms.error\", errorObject.error.toString().substring(0, 100));\r\n            }\r\n        }\r\n        if (errorObject.message) {\r\n            array.push(\"ms.errormsg\", errorObject.message.substring(0, 30));\r\n        }\r\n        if (errorObject.source) {\r\n            array.push(\"ms.errorsrc\", errorObject.source);\r\n        }\r\n        if (errorObject.lineno) {\r\n            array.push(\"ms.errorlineno\", errorObject.lineno);\r\n        }\r\n        if (errorObject.colno) {\r\n            array.push(\"ms.errorcolno\", errorObject.colno);\r\n        }\r\n        return array;\r\n    };\r\n    var errorSubscriber = function (errorObject) {\r\n        try {\r\n            var tArray = formatErrorObjectToWedcsArray(errorObject);\r\n            if (tArray.length > 0) {\r\n                insight.processWEDCSCustomEventFromArray(tArray);\r\n            }\r\n        } catch (ex) {\r\n            if (window.console) {\r\n                console.error(ex.toString());\r\n            }\r\n        }\r\n    };\r\n    insight.subscribeErrors = function () {\r\n        var Errors = require(\"errors\");\r\n        Errors.subscribe(errorSubscriber);\r\n    };\r\n    ////////////////////// Subscribe Trace\r\n    var traceSubscriber = function (entry) {\r\n        if (!entry) {\r\n            return;\r\n        }\r\n        var navigationStart = window.performance.timing.navigationStart;\r\n        if (typeof navigationStart !== \"number\") {\r\n            return;\r\n        }\r\n        if (entry.category === TraceCategory.performance) {\r\n            var perfEvent = entry.data;\r\n\r\n            var customPerfArrary = [];\r\n            customPerfArrary.push(perfEvent.name, perfEvent.timeStamp.getTime() - navigationStart);\r\n\r\n            var array = [];\r\n            array.push(\"ms.cus.perf.timing\", customPerfArrary.join());\r\n            insight.processWEDCSCustomEventFromArray(array);\r\n        }\r\n    };\r\n    insight.subscribeTrace = function () {\r\n        Trace.subscribe(traceSubscriber);\r\n    };\r\n    ////////////////////// Comment Related\r\n    var commentSubscriber = function (widget) {\r\n        widget.on(\"commentPosted\", function (data) {\r\n            if (data && data.id) {\r\n                var array = [];\r\n                array.push(\"ms.commentid\", encodeURI(data.id));\r\n                array.push(\"ms.commentdt\", new Date().getTime());\r\n                array.push(\"ms.commentet\", \"commentPosted\");\r\n                insight.processWEDCSCustomEventFromArray(array);\r\n            }\r\n        });\r\n    };\r\n    var commentErrorHandler = function (reason) {\r\n        Trace.traceError(\"comment loading failure\", reason);\r\n        var array = [];\r\n        array.push(\"ms.commenter\", encodeURI(JSON.stringify(reason)));\r\n        array.push(\"ms.commentet\", \"commentLoad\");\r\n        insight.processWEDCSCustomEventFromArray(array);\r\n    };\r\n    var sidenoteSubscriber = function (widget) {\r\n        widget.on(\"sidenotes.commentPosted\", function (data) {\r\n            if (data && data.id) {\r\n                var array = [];\r\n                array.push(\"ms.commentid\", encodeURI(data.id === null ? null : data.id.replace(\"@\", \"#\")));\r\n                array.push(\"ms.commentdt\", new Date().getTime());\r\n                array.push(\"ms.commentet\", \"sidenotePosted\");\r\n                insight.processWEDCSCustomEventFromArray(array);\r\n            }\r\n        });\r\n    };\r\n    var sidenoteErrorHandler = function (reason) {\r\n        Trace.traceError(\"sidenote loading failure\", reason);\r\n        var array = [];\r\n        array.push(\"ms.commenter\", encodeURI(JSON.stringify(reason)));\r\n        array.push(\"ms.commentet\", \"sidenoteLoad\");\r\n        insight.processWEDCSCustomEventFromArray(array);\r\n    };\r\n    insight.setupLiveFyreTracking = function () {\r\n        var commenting = require(\"commenting-callback\");\r\n        var commentPromise = commenting.getPromise(\"comment-init\");\r\n        if(commentPromise) {\r\n            commentPromise.then(commentSubscriber, commentErrorHandler);\r\n        } else {\r\n            Trace.traceError(\"Failed to get comment promise from commenting-callback\");\r\n        }\r\n        var sidenotePromise = commenting.getPromise(\"sidenote-init\");\r\n        if(sidenotePromise) {\r\n            sidenotePromise.then(sidenoteSubscriber, sidenoteErrorHandler);\r\n        } else {\r\n            Trace.traceError(\"Failed to get sidenote promise from commenting-callback\");\r\n        }\r\n    };\r\n    ////////////////////// FOCUS EVENT\r\n    insight.firePageFocusEvent = function (type) {\r\n        insight.debugLog(\"stepped inside firePageFocusEvent function\");\r\n        var tArray = [];\r\n        tArray.push(\"ms.focuseventtime\", new Date().getTime());\r\n        tArray.push(\"ms.focusorblue\", type);\r\n        insight.processWEDCSCustomEventFromArray(tArray);\r\n    };\r\n    insight.setupPageFocusTracking = function () {\r\n\r\n        $(window).on(\"blur focus\", function (e) {\r\n            var prevType = $(this).data(\"prevType\");\r\n\r\n            if (prevType !== e.type) {   //reduce double fire issues\r\n                switch (e.type) {\r\n                    case \"blur\":\r\n                        insight.debugLog(\"Blured\");\r\n                        insight.firePageFocusEvent(\"Blured\");\r\n                        break;\r\n                    case \"focus\":\r\n                        insight.debugLog(\"Focused\");\r\n                        insight.firePageFocusEvent(\"Focused\");\r\n                        break;\r\n                }\r\n            }\r\n            $(this).data(\"prevType\", e.type);\r\n        });\r\n\r\n    };\r\n    ////////////////////// COPY EVENT\r\n    insight.fireCopyEvent = function (txt, length) {\r\n        insight.debugLog(\"stepped inside fireCopyEvent function\");\r\n        var tArray = [];\r\n        tArray.push(\"ms.copyeventtime\", new Date().getTime());\r\n        tArray.push(\"ms.copycontent\", txt);\r\n        tArray.push(\"ms.copycontentlength\", length);\r\n        insight.processWEDCSCustomEventFromArray(tArray);\r\n    };\r\n    insight.setupCopyTracking = function () {\r\n        $(window).bind(\"copy\", function (e) {\r\n            var txt = window.getSelection().toString();\r\n            var length = txt.length;\r\n            txt = txt.substring(0, 20); //truncate to limit the length of WEDCS event\r\n            insight.fireCopyEvent(txt, length);\r\n        });\r\n    };\r\n    ////////////////////// SWITCHER SELECTION\r\n    insight.fireSwitcherEvent = function (switcher, selectedValue) {\r\n        insight.debugLog(\"stepped inside fireSwitcherEvent function\");\r\n        var tArray = [];\r\n        tArray.push(\"ms.switcheventtime\", new Date().getTime());\r\n        tArray.push(\"ms.switcher\", switcher);\r\n        tArray.push(\"ms.switchervalue\", selectedValue);\r\n        insight.processWEDCSCustomEventFromArray(tArray);\r\n    };\r\n    insight.setupSwitcherTracking = function () {\r\n        $(\".menu-theme select\").change(function () {\r\n            var selectedValue = $(\".menu-theme select\").val();\r\n            insight.fireSwitcherEvent(\"theme\", selectedValue);\r\n        });\r\n        $('.menu-platform select').change(function () {\r\n            var selectedValue = $(\".menu-platform select\").val();\r\n            insight.fireSwitcherEvent(\"platform\", selectedValue);\r\n        });\r\n        $('.menu-lang select').change(function () {\r\n            var selectedValue = $(\".menu-lang select\").val();\r\n            insight.fireSwitcherEvent(\"lang\", selectedValue);\r\n        });\r\n    };\r\n    ////////////////////// SCROLL TRACKING\r\n    //Scroll Area definition\r\n    insight.scrollArea = function (inName) {\r\n        this.name = inName;\r\n        this.scrollNA = false;\r\n        this.scrollQuarter = false;\r\n        this.scrollHalf = false;\r\n        this.scrollThreeQuarter = false;\r\n        this.scrollBot = false;\r\n    };\r\n    //Track multiple scroll areas per page\r\n    insight.currScrollArea = null;\r\n    insight.scrollAreaList = [];\r\n\r\n    insight.setCurrScrollArea = function (inIndex) {\r\n        if (typeof inIndex !== \"number\") {\r\n            return;\r\n        } else if (insight.scrollAreaList.length <= inIndex) {\r\n            return;\r\n        }\r\n\r\n        insight.currScrollArea = insight.scrollAreaList[inIndex];\r\n    };\r\n\r\n    //Page dimension variables\r\n    insight.scrollBottomElement = null;\r\n    insight.scrollPageHeight = -1;\r\n    insight.viewportBottom = -1;\r\n    insight.refreshScrollPageDimVars = function () {\r\n        var tBottom = 0;\r\n        if (insight.scrollBottomElement) {\r\n            tBottom = insight.scrollBottomElement.getBoundingClientRect().top + window.pageYOffset;\r\n        }\r\n        if (tBottom <= 0) {\r\n            tBottom = document.body.getBoundingClientRect().height;\r\n        }\r\n        insight.scrollPageHeight = tBottom;\r\n        insight.viewportBottom = window.pageYOffset + window.innerHeight;\r\n    };\r\n    insight.suppressMobileEvents = false;\r\n    insight.fireScrollEvent = function (inScrollValue) {\r\n        insight.fireScrollEvent(inScrollValue, \"scroll\");\r\n    };\r\n    insight.fireScrollStopEvent = function (inScrollValue) {\r\n        insight.fireScrollEvent(inScrollValue, \"scroll-stop\");\r\n    };\r\n    insight.fireScrollEvent = function (inScrollValue, eventType) {\r\n        insight.debugLog(\"stepped inside fireScrollEvent function\");\r\n        var tArray = [];\r\n        tArray.push(\"ms.pgarea\", \"body\");\r\n        tArray.push(\"ms.scnum\", \"scroll-\" + inScrollValue);\r\n        tArray.push(\"ms.interactiontype\", \"4\");\r\n        tArray.push(\"ms.scn\", eventType);\r\n        insight.processWEDCSCustomEventFromArray(tArray);\r\n    };\r\n    insight.processScroll = function (stopEvent) {\r\n        window.clearTimeout(insight.scrollResizeTimer);\r\n        if (insight.currScrollArea === null) {\r\n            return;\r\n        }\r\n        insight.refreshScrollPageDimVars();\r\n        if (insight.scrollPageHeight <= 0) {\r\n            return;\r\n        } else if (insight.suppressMobileEvents && window.innerWidth <= 510) {\r\n            return;\r\n        }\r\n\r\n        var tCurrPercent = insight.viewportBottom / insight.scrollPageHeight;\r\n\r\n        if (stopEvent === true) {\r\n            insight.fireScrollStopEvent(Math.round(tCurrPercent * 100) + \"%\");\r\n            return;\r\n        }\r\n\r\n        if (window.innerHeight > insight.scrollPageHeight * 0.90) {\r\n            //Visitor can see the whole page, fire special -na event\r\n            if (!insight.currScrollArea.scrollNA) {\r\n                insight.currScrollArea.scrollNA = true;\r\n                insight.fireScrollEvent(\"na\");\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (tCurrPercent > 0.25 && !insight.currScrollArea.scrollQuarter) {\r\n            insight.currScrollArea.scrollQuarter = true;\r\n            insight.fireScrollEvent(\"25%\");\r\n        }\r\n        if (tCurrPercent > 0.50 && !insight.currScrollArea.scrollHalf) {\r\n            insight.currScrollArea.scrollHalf = true;\r\n            insight.fireScrollEvent(\"50%\");\r\n        }\r\n        if (tCurrPercent > 0.75 && !insight.currScrollArea.scrollThreeQuarter) {\r\n            insight.currScrollArea.scrollThreeQuarter = true;\r\n            insight.fireScrollEvent(\"75%\");\r\n        }\r\n        if (tCurrPercent > 0.99 && !insight.currScrollArea.scrollBot) {\r\n            insight.currScrollArea.scrollBot = true;\r\n            insight.fireScrollEvent(\"100%\");\r\n        }\r\n    };\r\n\r\n    insight.scrollTimer = null;\r\n    insight.scrollResizeTimer = 0;\r\n    insight.setupScrollTracking = function () {\r\n        insight.scrollBottomElement = $(\"#footer\")[0];\r\n\r\n        insight.scrollAreaList.push(new insight.scrollArea(\"body\"));\r\n        insight.setCurrScrollArea(0);\r\n\r\n        window.addEventListener(\"scroll\", function () {\r\n            insight.processScroll(false);\r\n        });\r\n\r\n        //catch scroll stop event (stop more than 10 seconds)\r\n        if (insight.scrollTimer !== null) {\r\n            window.clearTimeout(insight.scrollTimer);\r\n        }\r\n        insight.scrollTimer = window.setTimeout(function () {\r\n            insight.processScroll(true);\r\n        }, 1000 * 10);\r\n\r\n        //Note: resize also catches zoom in/out\r\n        $(window).resize(function () {\r\n            window.clearTimeout(insight.scrollResizeTimer);\r\n            insight.scrollResizeTimer = window.setTimeout(function () {\r\n                insight.processScroll(false);\r\n            }, 500);\r\n        });\r\n    };\r\n    insight.extractMetaFromAmbientContext = function () {\r\n        if (window.AmbientContext) {\r\n            for (var key in window.AmbientContext) {\r\n                if (window.AmbientContext.hasOwnProperty(key)) {\r\n                    var content = window.AmbientContext[key];\r\n                    if (content) {\r\n                        if (!(typeof(content) === \"string\" || content instanceof String)) {\r\n                            content = JSON.stringify(content);\r\n                        }\r\n                    }\r\n                    $(\"head\").append(\"<meta name='ms.\" + encodeURI(key.replace(\".\", \"_\")) +\r\n                        \"' content='\" + encodeURI(content) + \"' />\");\r\n                }\r\n            }\r\n        }\r\n    };\r\n    insight.getPerfTiming = function () {\r\n        if (!window.performance || !window.performance.timing) {\r\n            return null;\r\n        }\r\n        var navigationStart = window.performance.timing.navigationStart;\r\n        if (typeof navigationStart !== \"number\") {\r\n            return null;\r\n        }\r\n        //Navigation timing attributes, ref: https://w3c.github.io/navigation-timing/\r\n        var keys = [\"redirectStart\", \"redirectEnd\", \"fetchStart\", \"connectStart\", \"connectEnd\", \"requestStart\", \"responseStart\",\r\n                    \"responseEnd\", \"domLoading\", \"domInteractive\", \"domContentLoadedEventStart\", \"domContentLoadedEventEnd\",\r\n                    \"domComplete\", \"loadEventStart\", \"loadEventEnd\"];\r\n        var timeInfoArr = [];\r\n        for (var index = 0; index < keys.length; index++) {\r\n            var key = keys[index];\r\n            if (typeof window.performance.timing[key] !== \"number\") {\r\n                timeInfoArr.push(\"\");\r\n            } else {\r\n                var elapsed = window.performance.timing[key] !== 0 ? window.performance.timing[key] - navigationStart : \"\";\r\n                timeInfoArr.push(elapsed);\r\n            }\r\n        }\r\n        return timeInfoArr.join();\r\n    };\r\n    var biMapping = {\r\n        \"author\": \"ms.author\",\r\n        \"contentlang\": \"ms.contentlang\",\r\n        \"depot_name\": \"ms.depotname\",\r\n        \"document_id\": \"ms.documentid\",\r\n        \"experiment_id\": \"ms.experimentid\",\r\n        \"gitcommit\": \"ms.gitcommit\",\r\n        \"locale\": \"ms.contentlang\",\r\n        \"original_content_git_url\": \"ms.giturl\",\r\n        \"pagetype\": \"ms.opspagetype\",\r\n        \"site_name\": \"ms.sitename\",\r\n        \"updated_at\": \"ms.publishtime\"\r\n    };\r\n    insight.setupBiTags = function () {\r\n        for (var key in biMapping) {\r\n            var content = insight.getMetaTagContent(key);\r\n            if (content !== null) {\r\n                if (insight.getMetaTagContent(biMapping[key]) === null) {\r\n                    insight.setMetaTagContent(biMapping[key], content);\r\n                }\r\n            }\r\n        }\r\n        var locale = require(\"locale\");\r\n        var currentLocale = locale.getLanguageFromUrl();\r\n        insight.setMetaTagContent(\"ms.locale\", encodeURI(currentLocale));\r\n\r\n        //add ms.lang and ms.loc if not exist\r\n        if (currentLocale) {\r\n            var strs = currentLocale.split(\"-\");\r\n            if (insight.getMetaTagContent(\"ms.lang\") === null) {\r\n                insight.setMetaTagContent(\"ms.lang\", encodeURI(strs[0]));\r\n            }\r\n            if (insight.getMetaTagContent(\"ms.loc\") === null) {\r\n                insight.setMetaTagContent(\"ms.loc\", strs.length > 1 ? encodeURI(strs[1]) : \"\");\r\n            }\r\n        }\r\n\r\n        //depot_name is an OP specific metadata, if it exists while ms.contentsource tag is missing, pick it up\r\n        //Insight team relies on ms.contentsource to find out all OP pages from WEDCS ocean\r\n        if (insight.getMetaTagContent(\"depot_name\") !== null &&\r\n                insight.getMetaTagContent(\"ms.contentsource\") === null) {\r\n            insight.setMetaTagContent(\"ms.contentsource\", \"OP\");\r\n        }\r\n    };\r\n    insight.isGlobalMetadataEnabled = function (meta) {\r\n        if (insight.getMetaTagContent(meta) !== null) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    insight.listMSMetadata = function () {\r\n        var res = [];\r\n        var arr = $(\"meta[name^='ms.']\");\r\n        for (var i = 0; i < arr.length; i++) {\r\n            res.push(arr[i].name);\r\n        }\r\n        return res.join(\", \");\r\n    };\r\n    insight.enableWEDCS = function () {\r\n        //WEDCS base settings\r\n        window.varClickTracking = 1;\r\n        window.varCustomerTracking = 0;\r\n        window.varAutoFirePV = 1;\r\n        window.route = \"\";\r\n        window.ctrl = \"\";\r\n\r\n        require([\"docs.config\"], function(config){\r\n            util.loadLibrary(config.paths.wedcs).then(function () {\r\n                insight.subscribeErrors();\r\n                insight.subscribeTrace();\r\n                insight.setupPageFocusTracking();\r\n                insight.setupScrollTracking();\r\n                insight.setupCopyTracking();\r\n                insight.setupSwitcherTracking();\r\n                insight.setupLiveFyreTracking();\r\n            });\r\n        });\r\n    };\r\n\r\n    $(document).ready(function () {\r\n        try {\r\n            insight.extractMetaFromAmbientContext();\r\n            insight.setupBiTags();\r\n\r\n            //TODO: remove following two lines after backend job is updated to use custom event instead of page view event\r\n            //For now, the meta should be added before load ms.js\r\n            var perfInfo = insight.getPerfTiming();\r\n            if (perfInfo) {\r\n                $(\"head\").append(\"<meta name='ms.perf.timing' content='\" + perfInfo + \"' />\");\r\n            }\r\n\r\n            insight.enableWEDCS();\r\n        } catch (ex) {\r\n            Trace.traceError(ex.toString());\r\n        }\r\n    });\r\n    //Expose jQuery for easy debugging\r\n    insight.jQuery = $;\r\n    window.insight = insight;\r\n})();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./insight.js\n ** module id = 36\n ** module chunks = 1 4 6\n **/","define([\"docs.metadata\", \"locale\"], function (metadata, locale) {\r\n    \"use strict\";\r\n    // connect to int by default.\r\n    var environment = \"int\";\r\n    if (location.hostname === \"docs.microsoft.com\") {\r\n        //only connect to prod when it's docs production environment.\r\n        environment = \"prod\";\r\n    }\r\n    var openFeedbackOptions = {\r\n        environment: environment,\r\n        containerElementId: \"openFeedbackContainer\",\r\n        siteNameMetaName: \"site_name\",\r\n        documentMetaName: \"document_id\",\r\n        localeMetaName: \"locale\", // content locale\r\n        uiLocale: locale.getLanguageFromUrl() // user preferred locale specified in url\r\n    };\r\n\r\n    // USER STORY 558937: Send both document_id and ms.assetid when call rating service API\r\n    if (metadata.get(\"ms.assetid\")) {\r\n        openFeedbackOptions.propertyBag = {\r\n            \"ms.assetid\": metadata.get(\"ms.assetid\")\r\n        };\r\n    }\r\n    // load openfeedback\r\n    window.openFeedbackOptions = openFeedbackOptions;\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./rating.js\n ** module id = 37\n ** module chunks = 1 6\n **/","define(function () {\r\n    \"use strict\";\r\n\r\n    /* jshint ignore:start */\r\n    (function(e,t,c,n){var o,s,a;e.SMCX=e.SMCX||[],t.getElementById(n)||(o=t.getElementsByTagName(c),s=o[o.length-1],a=t.createElement(c),a.type=\"text/javascript\",a.async=!0,a.id=n,a.src=[\"https:\"===location.protocol?\"https://\":\"http://\",\"widget.surveymonkey.com/collect/website/js/79yNbHm5_2Bc09cabC381UfD6Mz_2FuWCiepbBF6EB_2FT0Ea4MCk82Bh_2BApaijjR77BSR.js\"].join(\"\"),s.parentNode.insertBefore(a,s))})(window,document,\"script\",\"smcx-sdk\");\r\n    /* jshint ignore:end */\r\n\r\n});\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./survey.js\n ** module id = 38\n ** module chunks = 1 4 6 8\n **/"],"sourceRoot":""}